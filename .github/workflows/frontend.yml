name: Frontend

on:
  # Any pull request should be tested
  pull_request:

  # Pushes to relevant branches should be double-checked.
  push:
    branches: [main, QA, Prod]

jobs:
  check_files:
    runs-on: ubuntu-latest
    outputs:
      file_match: ${{ steps.filter.outputs.frontend }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # Checks to see if any files in the PR match one of the listed patterns.
      # We can use this filter to decide whether or not to run linters or tests.
      # You can check if a path is in the PR by doing:
      # if: ${{ steps.filter.outputs.backend == 'true' }}
      # This will return true if there's a file which matches a pattern in the
      # backend filter that was changed in the PR.
      - uses: dorny/paths-filter@v2.2.1
        id: filter
        with:
          filters: |
            frontend:
              - ".github/workflows/frontend.yml"
              - "frontend/**"
              - "**/docker-compose.cypress.yml"

  build_frontend:
    needs: check_files
    if: ${{ needs.check_files.outputs.file_match == 'true' }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: "14.x"
      - run: npm install
      - run: npm run build

  test_frontend:
    needs: check_files
    if: ${{ needs.check_files.outputs.file_match == 'true' }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install modules
        run: npm install

      - name: Run tests
        run: npm test

  check_formatting:
    needs: check_files
    if: ${{ needs.check_files.outputs.file_match == 'true' }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Run Prettier
        run: npm run prettier_check

  cypress_run:
    needs: check_files
    if: ${{ needs.check_files.outputs.file_match == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Start mock auth
        run: docker-compose -f docker-compose.cypress.yml up -d mock-auth

      - name: Cypress run
        uses: cypress-io/github-action@v2
        with:
          build: npm run build
          start: npm start
          wait-on: http://localhost:3000
          record: true
          tag: ${{ github.event_name }}
          working-directory: ./frontend
          config-file: cypress.json
        env:
          AD_CLIENT_ID: d83c2116-0a79-4a0d-8276-d51cdb4a6fd6
          FRONTEND_URL: http://localhost:3000
          API_URL: http://localhost:5000
          AUTH_URL: http://localhost:8080
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          COMMIT_INFO_MESSAGE: ${{ github.event.pull_request.title }}

name: Backend

on:
  # Any pull request should be tested
  pull_request:

  # Pushes to relevant branches should be double-checked.
  push:
    branches: [ main, QA, Prod ]

defaults:
  run:
    working-directory: backend/api

jobs:
  check_files:
    runs-on: ubuntu-latest
    outputs:
      file_match: ${{ steps.filter.outputs.backend }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # Checks to see if any files in the PR match one of the listed patterns.
      # We can use this filter to decide whether or not to run linters or tests.
      # You can check if a path is in the PR by doing:
      # if: ${{ steps.filter.outputs.backend == 'true' }}
      # This will return true if there's a file which matches a pattern in the
      # backend filter that was changed in the PR.
      - uses: dorny/paths-filter@v2.2.1
        id: filter
        with:
          filters: |
            backend:
              - ".github/workflows/backend.yml"
              - "backend/**"
              - "**/.editorconfig"

  build_backend:
    needs: check_files
    if: ${{ needs.check_files.outputs.file_match == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.0.x'
      - name: Build project and dependencies
        run: dotnet build

  test_backend:
    needs: check_files
    if: ${{ needs.check_files.outputs.file_match == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2.1.0

      - name: Set up .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.0.x'

      - name: Build project and dependencies
        run: dotnet build

      - name: Run tests
        run: dotnet test

  check_formatting:
    needs: check_files
    if: ${{ needs.check_files.outputs.file_match == 'true' }}
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '6.0.101'

    # Dotnet format is included in the .NET6 SDK
    # By default, the task ensures the exit code is 0
    # If a file needs to be edited by dotnet format, the exit code will be a non-zero value
    - name: Run dotnet format
      run: dotnet format --severity info --verbosity diagnostic --verify-no-changes

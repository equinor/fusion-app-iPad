name: UpdateDatabase

on:
  issue_comment:
    types: [created]

defaults:
  run:
    working-directory: backend/api

jobs:
  # The base job checks if comment is the right function and made on a pull request
  base_check:
    if: |
      github.event.issue.pull_request &&
      github.event.comment.body == '/UpdateDatabase'
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    outputs:
      eyes_id: ${{ fromJson(steps.eyes.outputs.data).id }}
    steps:
      - name: React to comment
        uses: octokit/request-action@v2.x
        id: eyes
        with:
          route: POST /repos/${{ github.repository }}/issues/comments/${{ github.event.comment.id }}/reactions
          content: 'eyes'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
  # Need to curl for the PR state as this does not exist in the github.event payload for issue_comment
  get_mergeable:
    needs: base_check
    runs-on: ubuntu-latest
    outputs:
      mergeable: ${{ fromJson(steps.get.outputs.data).mergeable }}
      eyes_id: ${{ needs.base_check.outputs.eyes_id }}
    steps:
      - uses: octokit/request-action@v2.x
        id: get
        with:
          route: GET ${{ github.event.issue.pull_request.url }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  if_not_mergeable_then_stop:
    needs: get_mergeable
    if: |
      !needs.get_mergeable.outputs.mergeable
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
      - name: Remove 'eyes' reaction
        uses: octokit/request-action@v2.x
        with:
          route: DELETE /repos/${{ github.repository }}/issues/comments/${{ github.event.comment.id }}/reactions/${{ needs.get_mergeable.outputs.eyes_id }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: React to comment
        uses: peter-evans/create-or-update-comment@v1
        with:
          comment-id: ${{ github.event.comment.id }}
          reactions: confused, -1

      - name: Add comment
        uses: peter-evans/create-or-update-comment@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ github.event.issue.number }}
          body: |
            :no_entry: Cannot update database until the Pull Request is mergeable! :no_entry:
            (Current mergeable status: ${{ needs.get_mergeable.outputs.mergeable }} )

  database_update_start:
    needs: get_mergeable
    if: |
      needs.get_mergeable.outputs.mergeable
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
      - name: Remove 'eyes' reaction
        uses: octokit/request-action@v2.x
        with:
          route: DELETE /repos/${{ github.repository }}/issues/comments/${{ github.event.comment.id }}/reactions/${{ needs.get_mergeable.outputs.eyes_id }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: React to comment
        uses: peter-evans/create-or-update-comment@v1
        with:
          comment-id: ${{ github.event.comment.id }}
          reactions: rocket, +1

      - name: Add comment
        uses: peter-evans/create-or-update-comment@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ github.event.issue.number }}
          body: |
            :eyes: Running migration command... :eyes:

  run_migrations:
    needs: database_update_start
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # Checks out to main branch by default, so we need to manually checkout to the PR the comment was made on
      # in order to do the update database on the new migrations.
      - name: Checkout Pull Request
        run: hub pr checkout ${{ github.event.issue.number }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: "6.0.x"

      - name: Build project and dependencies
        run: dotnet build

      - name: Install dotnet ef tool
        run: dotnet tool install -g dotnet-ef

      - name: Update database
        run: dotnet ef database update --no-build --verbose
        env:
          # Overwriting azure credentials with database owner credentials to perform migration
          AzureAd__ClientId: bc77effc-135f-4c3e-9eed-ba2c36a9434d
          AzureAd__ClientSecret: ${{ secrets.AZUREAD__DATABASEOWNER__CLIENTSECRET }}
          ConnectionStrings__iPadDatabase: Server=tcp:fusion-test-sqlserver.database.windows.net,1433;Initial Catalog=Fusion-Apps-IPad-Service-DEV-DB;Persist Security Info=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;

  database_success:
    needs: run_migrations
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
      - name: Add comment
        uses: peter-evans/create-or-update-comment@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ github.event.issue.number }}
          body: |
            :sparkles: Successfully ran migration command! :sparkles:

  database_failure:
    needs: run_migrations
    if: ${{ failure() }}
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
      - name: Add comment
        uses: peter-evans/create-or-update-comment@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ github.event.issue.number }}
          body: |
            :x: Migration failed, please see action log below for details :x:
            ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
